import requests
import streamlit as st

# 定义本地聊天机器人后端的接口地址
LOCAL_API_URL = "http://221.236.30.69:5200/chat"

st.set_page_config(page_title="Vulnerability Detector", page_icon="🤖", )

with st.sidebar:
    # 不再需要输入 OpenAI API 密钥
    st.info("Welcome to our Vulnerability Detector")

    st.markdown("<h1 style='text-align: center;'>如何开始 ⌨️</h1>", unsafe_allow_html=True)
    st.markdown(
        "  这是基于大语言模型的源代码漏洞挖掘检测系统. 🏆🏆"
    )
    st.markdown(
        "  你可以问她许多关于源代码漏洞的问题。"
    )
    st.markdown(
        "  本系统仍在不断精进完善中…… "
    )

st.title("🗣️ Vulnerability Detector")
st.caption("👨🏻‍💻 A Vulnerability Detector powered by a local sever")


if "messages" not in st.session_state:
    st.session_state["messages"] = [{"role": "assistant", "content": "How can I help you?"}]

for msg in st.session_state.messages:
    st.chat_message(msg["role"]).write(msg["content"])

if user_input := st.chat_input():
    # 显示用户输入
    st.session_state.messages.append({"role": "user", "content": user_input})
    st.chat_message("user").write(user_input)
    # 发送请求到本地聊天机器人后端接口
    response = requests.post(LOCAL_API_URL, json={"user_input": user_input})
    if response.status_code == 200:
        msg = response.json()["reply"]
        st.session_state.messages.append({"role": "assistant", "content": msg})
        st.chat_message("assistant").write(msg)
    else:
        st.error("Failed to get response from the local backend.\nSomething went wrong")


